package com.redhat.ceylon.compiler.java.test.structure.klass;

public abstract class CaseTypes implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
    
    public CaseTypes(final .java.lang.String name) {
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType() {
        return .com.redhat.ceylon.compiler.java.test.structure.klass.CaseTypes.$TypeDescriptor;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.klass.CaseTypes.class);
}
public final class foo_ extends .com.redhat.ceylon.compiler.java.test.structure.klass.CaseTypes {
    
    private foo_() {
        super("foo");
    }
    private static final .com.redhat.ceylon.compiler.java.test.structure.klass.foo_[] value;
    static {
        value = new .com.redhat.ceylon.compiler.java.test.structure.klass.foo_[]{new .com.redhat.ceylon.compiler.java.test.structure.klass.foo_()};
    }
    
    public static .com.redhat.ceylon.compiler.java.test.structure.klass.foo_ $get() {
        try {
            return value[0];
        } catch (.java.lang.NullPointerException ex) {
            throw new .ceylon.language.InitializationException("Cyclic initialization");
        }
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType() {
        return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.klass.foo_.class);
    }
}
public final class bar_ extends .com.redhat.ceylon.compiler.java.test.structure.klass.CaseTypes {
    
    private bar_() {
        super("bar");
    }
    private static final .com.redhat.ceylon.compiler.java.test.structure.klass.bar_[] value;
    static {
        value = new .com.redhat.ceylon.compiler.java.test.structure.klass.bar_[]{new .com.redhat.ceylon.compiler.java.test.structure.klass.bar_()};
    }
    
    public static .com.redhat.ceylon.compiler.java.test.structure.klass.bar_ $get() {
        try {
            return value[0];
        } catch (.java.lang.NullPointerException ex) {
            throw new .ceylon.language.InitializationException("Cyclic initialization");
        }
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType() {
        return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.klass.bar_.class);
    }
}
public abstract class CaseTypes2 implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
    
    public CaseTypes2(final .java.lang.String name) {
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType() {
        return .com.redhat.ceylon.compiler.java.test.structure.klass.CaseTypes2.$TypeDescriptor;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.klass.CaseTypes2.class);
}
public class Foo extends .com.redhat.ceylon.compiler.java.test.structure.klass.CaseTypes2 {
    
    public Foo() {
        super("Foo");
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.$get().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.structure.klass.Foo();
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType() {
        return .com.redhat.ceylon.compiler.java.test.structure.klass.Foo.$TypeDescriptor;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.klass.Foo.class);
}
public class Bar extends .com.redhat.ceylon.compiler.java.test.structure.klass.CaseTypes2 {
    
    public Bar() {
        super("Bar");
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.$get().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.structure.klass.Bar();
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType() {
        return .com.redhat.ceylon.compiler.java.test.structure.klass.Bar.$TypeDescriptor;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.klass.Bar.class);
}
public interface ICaseTypes {
    
    public .com.redhat.ceylon.compiler.java.test.structure.klass.ICaseTypes$impl $com$redhat$ceylon$compiler$java$test$structure$klass$ICaseTypes$impl();
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.klass.ICaseTypes.class);
}
public final class ICaseTypes$impl {
    
    public ICaseTypes$impl(.com.redhat.ceylon.compiler.java.test.structure.klass.ICaseTypes $this) {
        this.$this = $this;
    }
    private final .com.redhat.ceylon.compiler.java.test.structure.klass.ICaseTypes $this;
}
public interface IFoo extends .com.redhat.ceylon.compiler.java.test.structure.klass.ICaseTypes {
    
    public .com.redhat.ceylon.compiler.java.test.structure.klass.IFoo$impl $com$redhat$ceylon$compiler$java$test$structure$klass$IFoo$impl();
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.klass.IFoo.class);
}
public final class IFoo$impl {
    
    public IFoo$impl(.com.redhat.ceylon.compiler.java.test.structure.klass.IFoo $this) {
        this.$this = $this;
    }
    private final .com.redhat.ceylon.compiler.java.test.structure.klass.IFoo $this;
}
public interface IBar extends .com.redhat.ceylon.compiler.java.test.structure.klass.ICaseTypes {
    
    public .com.redhat.ceylon.compiler.java.test.structure.klass.IBar$impl $com$redhat$ceylon$compiler$java$test$structure$klass$IBar$impl();
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.klass.IBar.class);
}
public final class IBar$impl {
    
    public IBar$impl(.com.redhat.ceylon.compiler.java.test.structure.klass.IBar $this) {
        this.$this = $this;
    }
    private final .com.redhat.ceylon.compiler.java.test.structure.klass.IBar $this;
}