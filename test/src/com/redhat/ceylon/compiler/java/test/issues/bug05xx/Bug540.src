package com.redhat.ceylon.compiler.java.test.issues.bug05xx;

final class arr1_ {
    
    private arr1_() {
    }
    private static final .ceylon.language.Array<.ceylon.language.Integer>[] value;
    static {
        value = new .ceylon.language.Array[]{.ceylon.language.array_.<.ceylon.language.Integer>array(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.class, new .ceylon.language.Tuple<.ceylon.language.Integer, .ceylon.language.Integer, .ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Empty>>>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor)), .ceylon.language.Integer.instance(1L), new .ceylon.language.Tuple<.ceylon.language.Integer, .ceylon.language.Integer, .ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Empty>>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor), .ceylon.language.Integer.instance(2L), new .ceylon.language.Tuple<.ceylon.language.Integer, .ceylon.language.Integer, .ceylon.language.Empty>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor, .ceylon.language.Integer.instance(3L), .ceylon.language.empty_.$get()))))};
    }
    
    public static .ceylon.language.Array<.ceylon.language.Integer> $get() {
        try {
            return value[0];
        } catch (.java.lang.NullPointerException ex) {
            throw new .ceylon.language.InitializationException("Cyclic initialization");
        }
    }
}
final class arr3_ {
    
    private arr3_() {
    }
    private static final .ceylon.language.Array<.ceylon.language.Integer>[] value;
    static {
        value = new .ceylon.language.Array[]{(
            let
            {
                .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $arg$0$reified$0 = .ceylon.language.Integer.$TypeDescriptor;
                .ceylon.language.Iterable $arg$0$0 = .ceylon.language.ArraySequence.<.ceylon.language.Integer>instance(.ceylon.language.Integer.$TypeDescriptor, new .java.lang.Object[]{
                        .ceylon.language.Integer.instance(1L),
                        .ceylon.language.Integer.instance(2L),
                        .ceylon.language.Integer.instance(3L)});
            }
            returning .ceylon.language.array_.<.ceylon.language.Integer>array($arg$0$reified$0, .ceylon.language.Integer.class, $arg$0$0);
        )};
    }
    
    public static .ceylon.language.Array<.ceylon.language.Integer> $get() {
        try {
            return value[0];
        } catch (.java.lang.NullPointerException ex) {
            throw new .ceylon.language.InitializationException("Cyclic initialization");
        }
    }
}