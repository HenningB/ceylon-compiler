package com.redhat.ceylon.compiler.java.test.issues.bug12xx;

final class bug1227_ifBreak_returnElse_ {
    
    private bug1227_ifBreak_returnElse_() {
    }
    
    static long bug1227_ifBreak_returnElse(final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> l) {
        final boolean someBoolean = ((.ceylon.language.Boolean).ceylon.language.nothing_.get_()).booleanValue();
        final long from;
        long from$0 = 0L;
        boolean doforelse$1 = true;
        final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> iterable$6 = l;
        final boolean isArray$7 = iterable$6 instanceof .ceylon.language.Array;
        final boolean isTuple$8 = iterable$6 instanceof .ceylon.language.Tuple && ((.ceylon.language.Tuple)iterable$6).$getArray$() != null;
        .java.lang.Object elem$2 = null;
        final .java.lang.Object array$9;
        int i$10 = 0;
        final int length$11;
        if (isTuple$8) {
            array$9 = ((.ceylon.language.Tuple)iterable$6).$getArray$();
            i$10 = ((.ceylon.language.Tuple)iterable$6).$getFirst$();
            length$11 = i$10 + ((.ceylon.language.Tuple)iterable$6).$getLength$();
        } else if (isArray$7) {
            array$9 = ((.ceylon.language.Array)iterable$6).toArray();
            length$11 = .com.redhat.ceylon.compiler.java.Util.arrayLength(array$9);
        } else {
            array$9 = null;
            length$11 = 0;
        }
        .ceylon.language.Iterator<? extends .ceylon.language.Integer> index$iterator$$3 = isTuple$8 || isArray$7 ? null : iterable$6.iterator();
        loop_0: while (isTuple$8 || isArray$7 ? i$10 < length$11 : !((elem$2 = index$iterator$$3.next()) instanceof .ceylon.language.Finished)) {
            if (isTuple$8 || isArray$7) elem$2 = .com.redhat.ceylon.compiler.java.Util.getObjectArray(array$9, i$10++);
            final long index = ((.ceylon.language.Integer)elem$2).longValue();
            if (someBoolean) {
                from$0 = index;
                final long from$5 = from$0;
                
                final class ohNo_ {
                    
                    private ohNo_() {
                    }
                    
                    long ohNo() {
                        return from$5 + 1L;
                    }
                }
                final ohNo_ ohNo = new ohNo_();
                doforelse$1 = false;
                break loop_0;
            }
        }
        if (doforelse$1) {
            return 0L;
        }
        from = from$0;
        return from;
    }
}
final class bug1227_ifBreak_returnElse_opt_ {
    
    private bug1227_ifBreak_returnElse_opt_() {
    }
    
    static long bug1227_ifBreak_returnElse_opt() {
        final boolean someBoolean = ((.ceylon.language.Boolean).ceylon.language.nothing_.get_()).booleanValue();
        final long from;
        long from$12 = 0L;
        boolean doforelse$13 = true;
        final long $ceylontmp$start$14 = 1L;
        final long $ceylontmp$end$15 = 10L;
        final boolean $ceylontmp$increasing$16 = .ceylon.language.Integer.offset($ceylontmp$end$15, $ceylontmp$start$14) >= 0;
        final long $ceylontmp$incr$17 = $ceylontmp$increasing$16 ? 1L : -1L;
        loop_1: for (long index$18 = $ceylontmp$start$14; $ceylontmp$increasing$16 ? index$18 - $ceylontmp$end$15 <= 0L : index$18 - $ceylontmp$end$15 >= 0L; index$18 += $ceylontmp$incr$17) {
            final long index = index$18;
            if (someBoolean) {
                from$12 = index;
                final long from$20 = from$12;
                doforelse$13 = false;
                break loop_1;
            }
        }
        if (doforelse$13) {
            return 0L;
        }
        from = from$12;
        return from;
    }
}
final class bug1227_ifBreak_specifiedElse_ {
    
    private bug1227_ifBreak_specifiedElse_() {
    }
    
    static long bug1227_ifBreak_specifiedElse(final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> l) {
        final boolean someBoolean = ((.ceylon.language.Boolean).ceylon.language.nothing_.get_()).booleanValue();
        final long from;
        long from$21 = 0L;
        boolean doforelse$22 = true;
        final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> iterable$27 = l;
        final boolean isArray$28 = iterable$27 instanceof .ceylon.language.Array;
        final boolean isTuple$29 = iterable$27 instanceof .ceylon.language.Tuple && ((.ceylon.language.Tuple)iterable$27).$getArray$() != null;
        .java.lang.Object elem$23 = null;
        final .java.lang.Object array$30;
        int i$31 = 0;
        final int length$32;
        if (isTuple$29) {
            array$30 = ((.ceylon.language.Tuple)iterable$27).$getArray$();
            i$31 = ((.ceylon.language.Tuple)iterable$27).$getFirst$();
            length$32 = i$31 + ((.ceylon.language.Tuple)iterable$27).$getLength$();
        } else if (isArray$28) {
            array$30 = ((.ceylon.language.Array)iterable$27).toArray();
            length$32 = .com.redhat.ceylon.compiler.java.Util.arrayLength(array$30);
        } else {
            array$30 = null;
            length$32 = 0;
        }
        .ceylon.language.Iterator<? extends .ceylon.language.Integer> index$iterator$$24 = isTuple$29 || isArray$28 ? null : iterable$27.iterator();
        loop_2: while (isTuple$29 || isArray$28 ? i$31 < length$32 : !((elem$23 = index$iterator$$24.next()) instanceof .ceylon.language.Finished)) {
            if (isTuple$29 || isArray$28) elem$23 = .com.redhat.ceylon.compiler.java.Util.getObjectArray(array$30, i$31++);
            final long index = ((.ceylon.language.Integer)elem$23).longValue();
            if (someBoolean) {
                from$21 = index;
                final long from$26 = from$21;
                final long x = from$26 + 1L;
                doforelse$22 = false;
                break loop_2;
            }
        }
        if (doforelse$22) {
            from$21 = 0L;
            final long from$33 = from$21;
        }
        from = from$21;
        return from;
    }
}
final class bug1227_ifBreak_specifiedElse_opt_ {
    
    private bug1227_ifBreak_specifiedElse_opt_() {
    }
    
    static long bug1227_ifBreak_specifiedElse_opt() {
        final boolean someBoolean = ((.ceylon.language.Boolean).ceylon.language.nothing_.get_()).booleanValue();
        final long from;
        long from$34 = 0L;
        boolean doforelse$35 = true;
        final long $ceylontmp$start$36 = 1L;
        final long $ceylontmp$end$37 = 10L;
        final boolean $ceylontmp$increasing$38 = .ceylon.language.Integer.offset($ceylontmp$end$37, $ceylontmp$start$36) >= 0;
        final long $ceylontmp$incr$39 = $ceylontmp$increasing$38 ? 1L : -1L;
        loop_3: for (long index$40 = $ceylontmp$start$36; $ceylontmp$increasing$38 ? index$40 - $ceylontmp$end$37 <= 0L : index$40 - $ceylontmp$end$37 >= 0L; index$40 += $ceylontmp$incr$39) {
            final long index = index$40;
            if (someBoolean) {
                from$34 = index;
                final long from$42 = from$34;
                final long x = from$42 + 1L;
                doforelse$35 = false;
                break loop_3;
            }
        }
        if (doforelse$35) {
            from$34 = 0L;
            final long from$43 = from$34;
        }
        from = from$34;
        return from;
    }
}
final class bug1227_ifBreak_elseBreak_specifiedElse_ {
    
    private bug1227_ifBreak_elseBreak_specifiedElse_() {
    }
    
    static long bug1227_ifBreak_elseBreak_specifiedElse(final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> l) {
        final boolean someBoolean = ((.ceylon.language.Boolean).ceylon.language.nothing_.get_()).booleanValue();
        final long from;
        long from$44 = 0L;
        boolean doforelse$45 = true;
        final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> iterable$51 = l;
        final boolean isArray$52 = iterable$51 instanceof .ceylon.language.Array;
        final boolean isTuple$53 = iterable$51 instanceof .ceylon.language.Tuple && ((.ceylon.language.Tuple)iterable$51).$getArray$() != null;
        .java.lang.Object elem$46 = null;
        final .java.lang.Object array$54;
        int i$55 = 0;
        final int length$56;
        if (isTuple$53) {
            array$54 = ((.ceylon.language.Tuple)iterable$51).$getArray$();
            i$55 = ((.ceylon.language.Tuple)iterable$51).$getFirst$();
            length$56 = i$55 + ((.ceylon.language.Tuple)iterable$51).$getLength$();
        } else if (isArray$52) {
            array$54 = ((.ceylon.language.Array)iterable$51).toArray();
            length$56 = .com.redhat.ceylon.compiler.java.Util.arrayLength(array$54);
        } else {
            array$54 = null;
            length$56 = 0;
        }
        .ceylon.language.Iterator<? extends .ceylon.language.Integer> index$iterator$$47 = isTuple$53 || isArray$52 ? null : iterable$51.iterator();
        loop_4: while (isTuple$53 || isArray$52 ? i$55 < length$56 : !((elem$46 = index$iterator$$47.next()) instanceof .ceylon.language.Finished)) {
            if (isTuple$53 || isArray$52) elem$46 = .com.redhat.ceylon.compiler.java.Util.getObjectArray(array$54, i$55++);
            final long index = ((.ceylon.language.Integer)elem$46).longValue();
            if (someBoolean) {
                from$44 = index;
                final long from$50 = from$44;
                
                final class ohNo_ {
                    
                    private ohNo_() {
                    }
                    
                    long ohNo() {
                        return from$50 + 1L;
                    }
                }
                final ohNo_ ohNo = new ohNo_();
                doforelse$45 = false;
                break loop_4;
            } else {
                from$44 = index + 1L;
                final long from$49 = from$44;
                
                class C implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
                    
                    C() {
                        final long x = from$49;
                    }
                    
                    @.java.lang.Override
                    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
                        return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.functionOrValue(.com.redhat.ceylon.compiler.java.test.issues.bug12xx.bug1227_ifBreak_elseBreak_specifiedElse_.class), .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(C.class));
                    }
                }
                doforelse$45 = false;
                break loop_4;
            }
        }
        if (doforelse$45) {
            from$44 = 0L;
            final long from$57 = from$44;
        }
        from = from$44;
        return from;
    }
}
final class bug1227_ifBreak_elseBreak_specifiedElse_opt_ {
    
    private bug1227_ifBreak_elseBreak_specifiedElse_opt_() {
    }
    
    static long bug1227_ifBreak_elseBreak_specifiedElse_opt() {
        final boolean someBoolean = ((.ceylon.language.Boolean).ceylon.language.nothing_.get_()).booleanValue();
        final long from;
        long from$58 = 0L;
        boolean doforelse$59 = true;
        final long $ceylontmp$start$60 = 1L;
        final long $ceylontmp$end$61 = 10L;
        final boolean $ceylontmp$increasing$62 = .ceylon.language.Integer.offset($ceylontmp$end$61, $ceylontmp$start$60) >= 0;
        final long $ceylontmp$incr$63 = $ceylontmp$increasing$62 ? 1L : -1L;
        loop_5: for (long index$64 = $ceylontmp$start$60; $ceylontmp$increasing$62 ? index$64 - $ceylontmp$end$61 <= 0L : index$64 - $ceylontmp$end$61 >= 0L; index$64 += $ceylontmp$incr$63) {
            final long index = index$64;
            if (someBoolean) {
                from$58 = index;
                final long from$67 = from$58;
                
                final class ohNo_ {
                    
                    private ohNo_() {
                    }
                    
                    long ohNo() {
                        return from$67 + 1L;
                    }
                }
                final ohNo_ ohNo = new ohNo_();
                doforelse$59 = false;
                break loop_5;
            } else {
                from$58 = index + 1L;
                final long from$66 = from$58;
                
                class C implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
                    
                    C() {
                        final long x = from$66;
                    }
                    
                    @.java.lang.Override
                    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
                        return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.functionOrValue(.com.redhat.ceylon.compiler.java.test.issues.bug12xx.bug1227_ifBreak_elseBreak_specifiedElse_opt_.class), .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(C.class));
                    }
                }
                doforelse$59 = false;
                break loop_5;
            }
        }
        if (doforelse$59) {
            from$58 = 0L;
            final long from$68 = from$58;
        }
        from = from$58;
        return from;
    }
}
final class bug1227_ifReturn_specifiedElse_ {
    
    private bug1227_ifReturn_specifiedElse_() {
    }
    
    static long bug1227_ifReturn_specifiedElse(final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> l) {
        final boolean someBoolean = ((.ceylon.language.Boolean).ceylon.language.nothing_.get_()).booleanValue();
        final long from;
        long from$69 = 0L;
        final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> iterable$74 = l;
        final boolean isArray$75 = iterable$74 instanceof .ceylon.language.Array;
        final boolean isTuple$76 = iterable$74 instanceof .ceylon.language.Tuple && ((.ceylon.language.Tuple)iterable$74).$getArray$() != null;
        .java.lang.Object elem$70 = null;
        final .java.lang.Object array$77;
        int i$78 = 0;
        final int length$79;
        if (isTuple$76) {
            array$77 = ((.ceylon.language.Tuple)iterable$74).$getArray$();
            i$78 = ((.ceylon.language.Tuple)iterable$74).$getFirst$();
            length$79 = i$78 + ((.ceylon.language.Tuple)iterable$74).$getLength$();
        } else if (isArray$75) {
            array$77 = ((.ceylon.language.Array)iterable$74).toArray();
            length$79 = .com.redhat.ceylon.compiler.java.Util.arrayLength(array$77);
        } else {
            array$77 = null;
            length$79 = 0;
        }
        .ceylon.language.Iterator<? extends .ceylon.language.Integer> index$iterator$$71 = isTuple$76 || isArray$75 ? null : iterable$74.iterator();
        loop_6: while (isTuple$76 || isArray$75 ? i$78 < length$79 : !((elem$70 = index$iterator$$71.next()) instanceof .ceylon.language.Finished)) {
            if (isTuple$76 || isArray$75) elem$70 = .com.redhat.ceylon.compiler.java.Util.getObjectArray(array$77, i$78++);
            final long index = ((.ceylon.language.Integer)elem$70).longValue();
            if (someBoolean) {
                from$69 = index;
                final long from$73 = from$69;
                
                final class ohNo_ {
                    
                    private ohNo_() {
                    }
                    
                    long ohNo() {
                        return from$73 + 1L;
                    }
                }
                final ohNo_ ohNo = new ohNo_();
                return from$69;
            }
        }
        from$69 = 0L;
        final long from$80 = from$69;
        from = from$69;
        return from;
    }
}
final class bug1227_ifReturn_specifiedElse_opt_ {
    
    private bug1227_ifReturn_specifiedElse_opt_() {
    }
    
    static long bug1227_ifReturn_specifiedElse_opt() {
        final boolean someBoolean = ((.ceylon.language.Boolean).ceylon.language.nothing_.get_()).booleanValue();
        final long from;
        long from$81 = 0L;
        final long $ceylontmp$start$82 = 1L;
        final long $ceylontmp$end$83 = 10L;
        final boolean $ceylontmp$increasing$84 = .ceylon.language.Integer.offset($ceylontmp$end$83, $ceylontmp$start$82) >= 0;
        final long $ceylontmp$incr$85 = $ceylontmp$increasing$84 ? 1L : -1L;
        loop_7: for (long index$86 = $ceylontmp$start$82; $ceylontmp$increasing$84 ? index$86 - $ceylontmp$end$83 <= 0L : index$86 - $ceylontmp$end$83 >= 0L; index$86 += $ceylontmp$incr$85) {
            final long index = index$86;
            if (someBoolean) {
                from$81 = index;
                final long from$88 = from$81;
                
                final class ohNo_ {
                    
                    private ohNo_() {
                    }
                    
                    long ohNo() {
                        return from$88 + 1L;
                    }
                }
                final ohNo_ ohNo = new ohNo_();
                return from$81;
            }
        }
        from$81 = 0L;
        final long from$89 = from$81;
        from = from$81;
        return from;
    }
}
final class bug1227_ifThrow_specifiedElse_ {
    
    private bug1227_ifThrow_specifiedElse_() {
    }
    
    static long bug1227_ifThrow_specifiedElse(final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> l) {
        final boolean someBoolean = ((.ceylon.language.Boolean).ceylon.language.nothing_.get_()).booleanValue();
        final long from;
        long from$90 = 0L;
        final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> iterable$95 = l;
        final boolean isArray$96 = iterable$95 instanceof .ceylon.language.Array;
        final boolean isTuple$97 = iterable$95 instanceof .ceylon.language.Tuple && ((.ceylon.language.Tuple)iterable$95).$getArray$() != null;
        .java.lang.Object elem$91 = null;
        final .java.lang.Object array$98;
        int i$99 = 0;
        final int length$100;
        if (isTuple$97) {
            array$98 = ((.ceylon.language.Tuple)iterable$95).$getArray$();
            i$99 = ((.ceylon.language.Tuple)iterable$95).$getFirst$();
            length$100 = i$99 + ((.ceylon.language.Tuple)iterable$95).$getLength$();
        } else if (isArray$96) {
            array$98 = ((.ceylon.language.Array)iterable$95).toArray();
            length$100 = .com.redhat.ceylon.compiler.java.Util.arrayLength(array$98);
        } else {
            array$98 = null;
            length$100 = 0;
        }
        .ceylon.language.Iterator<? extends .ceylon.language.Integer> index$iterator$$92 = isTuple$97 || isArray$96 ? null : iterable$95.iterator();
        loop_8: while (isTuple$97 || isArray$96 ? i$99 < length$100 : !((elem$91 = index$iterator$$92.next()) instanceof .ceylon.language.Finished)) {
            if (isTuple$97 || isArray$96) elem$91 = .com.redhat.ceylon.compiler.java.Util.getObjectArray(array$98, i$99++);
            final long index = ((.ceylon.language.Integer)elem$91).longValue();
            if (someBoolean) {
                from$90 = index;
                final long from$94 = from$90;
                throw new .ceylon.language.Exception(null, null);
            }
        }
        from$90 = 0L;
        final long from$101 = from$90;
        from = from$90;
        return from;
    }
}
final class bug1227_ifThrow_specifiedElse_opt_ {
    
    private bug1227_ifThrow_specifiedElse_opt_() {
    }
    
    static long bug1227_ifThrow_specifiedElse_opt() {
        final boolean someBoolean = ((.ceylon.language.Boolean).ceylon.language.nothing_.get_()).booleanValue();
        final long from;
        long from$102 = 0L;
        final long $ceylontmp$start$103 = 1L;
        final long $ceylontmp$end$104 = 10L;
        final boolean $ceylontmp$increasing$105 = .ceylon.language.Integer.offset($ceylontmp$end$104, $ceylontmp$start$103) >= 0;
        final long $ceylontmp$incr$106 = $ceylontmp$increasing$105 ? 1L : -1L;
        loop_9: for (long index$107 = $ceylontmp$start$103; $ceylontmp$increasing$105 ? index$107 - $ceylontmp$end$104 <= 0L : index$107 - $ceylontmp$end$104 >= 0L; index$107 += $ceylontmp$incr$106) {
            final long index = index$107;
            if (someBoolean) {
                from$102 = index;
                final long from$109 = from$102;
                throw new .ceylon.language.Exception(null, null);
            }
        }
        from$102 = 0L;
        final long from$110 = from$102;
        from = from$102;
        return from;
    }
}
final class bug1227_for2_ifReturn_specifiedElse_ {
    
    private bug1227_for2_ifReturn_specifiedElse_() {
    }
    
    static long bug1227_for2_ifReturn_specifiedElse(final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> l) {
        final boolean someBoolean = ((.ceylon.language.Boolean).ceylon.language.nothing_.get_()).booleanValue();
        final long from;
        long from$111 = 0L;
        final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> iterable$124 = l;
        final boolean isArray$125 = iterable$124 instanceof .ceylon.language.Array;
        final boolean isTuple$126 = iterable$124 instanceof .ceylon.language.Tuple && ((.ceylon.language.Tuple)iterable$124).$getArray$() != null;
        .java.lang.Object elem$112 = null;
        final .java.lang.Object array$127;
        int i$128 = 0;
        final int length$129;
        if (isTuple$126) {
            array$127 = ((.ceylon.language.Tuple)iterable$124).$getArray$();
            i$128 = ((.ceylon.language.Tuple)iterable$124).$getFirst$();
            length$129 = i$128 + ((.ceylon.language.Tuple)iterable$124).$getLength$();
        } else if (isArray$125) {
            array$127 = ((.ceylon.language.Array)iterable$124).toArray();
            length$129 = .com.redhat.ceylon.compiler.java.Util.arrayLength(array$127);
        } else {
            array$127 = null;
            length$129 = 0;
        }
        .ceylon.language.Iterator<? extends .ceylon.language.Integer> index$iterator$$113 = isTuple$126 || isArray$125 ? null : iterable$124.iterator();
        loop_10: while (isTuple$126 || isArray$125 ? i$128 < length$129 : !((elem$112 = index$iterator$$113.next()) instanceof .ceylon.language.Finished)) {
            if (isTuple$126 || isArray$125) elem$112 = .com.redhat.ceylon.compiler.java.Util.getObjectArray(array$127, i$128++);
            final long index = ((.ceylon.language.Integer)elem$112).longValue();
            final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> iterable$118 = l;
            final boolean isArray$119 = iterable$118 instanceof .ceylon.language.Array;
            final boolean isTuple$120 = iterable$118 instanceof .ceylon.language.Tuple && ((.ceylon.language.Tuple)iterable$118).$getArray$() != null;
            .java.lang.Object elem$114 = null;
            final .java.lang.Object array$121;
            int i$122 = 0;
            final int length$123;
            if (isTuple$120) {
                array$121 = ((.ceylon.language.Tuple)iterable$118).$getArray$();
                i$122 = ((.ceylon.language.Tuple)iterable$118).$getFirst$();
                length$123 = i$122 + ((.ceylon.language.Tuple)iterable$118).$getLength$();
            } else if (isArray$119) {
                array$121 = ((.ceylon.language.Array)iterable$118).toArray();
                length$123 = .com.redhat.ceylon.compiler.java.Util.arrayLength(array$121);
            } else {
                array$121 = null;
                length$123 = 0;
            }
            .ceylon.language.Iterator<? extends .ceylon.language.Integer> index2$iterator$$115 = isTuple$120 || isArray$119 ? null : iterable$118.iterator();
            loop_11: while (isTuple$120 || isArray$119 ? i$122 < length$123 : !((elem$114 = index2$iterator$$115.next()) instanceof .ceylon.language.Finished)) {
                if (isTuple$120 || isArray$119) elem$114 = .com.redhat.ceylon.compiler.java.Util.getObjectArray(array$121, i$122++);
                final long index2 = ((.ceylon.language.Integer)elem$114).longValue();
                if (someBoolean) {
                    from$111 = index + index2;
                    final long from$117 = from$111;
                    return from$111;
                }
            }
            from = from$111;
        }
        from = 0L;
        final long from$130 = from;
        return from;
    }
}
final class bug1227_declaredInside_ {
    
    private bug1227_declaredInside_() {
    }
    
    static long bug1227_declaredInside(final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> l) {
        final boolean someBoolean = ((.ceylon.language.Boolean).ceylon.language.nothing_.get_()).booleanValue();
        boolean doforelse$131 = true;
        final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> iterable$135 = l;
        final boolean isArray$136 = iterable$135 instanceof .ceylon.language.Array;
        final boolean isTuple$137 = iterable$135 instanceof .ceylon.language.Tuple && ((.ceylon.language.Tuple)iterable$135).$getArray$() != null;
        .java.lang.Object elem$132 = null;
        final .java.lang.Object array$138;
        int i$139 = 0;
        final int length$140;
        if (isTuple$137) {
            array$138 = ((.ceylon.language.Tuple)iterable$135).$getArray$();
            i$139 = ((.ceylon.language.Tuple)iterable$135).$getFirst$();
            length$140 = i$139 + ((.ceylon.language.Tuple)iterable$135).$getLength$();
        } else if (isArray$136) {
            array$138 = ((.ceylon.language.Array)iterable$135).toArray();
            length$140 = .com.redhat.ceylon.compiler.java.Util.arrayLength(array$138);
        } else {
            array$138 = null;
            length$140 = 0;
        }
        .ceylon.language.Iterator<? extends .ceylon.language.Integer> index$iterator$$133 = isTuple$137 || isArray$136 ? null : iterable$135.iterator();
        loop_12: while (isTuple$137 || isArray$136 ? i$139 < length$140 : !((elem$132 = index$iterator$$133.next()) instanceof .ceylon.language.Finished)) {
            if (isTuple$137 || isArray$136) elem$132 = .com.redhat.ceylon.compiler.java.Util.getObjectArray(array$138, i$139++);
            final long index = ((.ceylon.language.Integer)elem$132).longValue();
            final long from;
            if (someBoolean) {
                from = index;
                
                final class ohNo_ {
                    
                    private ohNo_() {
                    }
                    
                    long ohNo() {
                        return from + 1L;
                    }
                }
                final ohNo_ ohNo = new ohNo_();
                doforelse$131 = false;
                break loop_12;
            }
        }
        if (doforelse$131) {
            return 0L;
        }
        return 0L;
    }
}
final class bug1227_onlySpecifiedElse_ {
    
    private bug1227_onlySpecifiedElse_() {
    }
    
    static long bug1227_onlySpecifiedElse(final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> l) {
        final boolean someBoolean = ((.ceylon.language.Boolean).ceylon.language.nothing_.get_()).booleanValue();
        final long from;
        final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> iterable$143 = l;
        final boolean isArray$144 = iterable$143 instanceof .ceylon.language.Array;
        final boolean isTuple$145 = iterable$143 instanceof .ceylon.language.Tuple && ((.ceylon.language.Tuple)iterable$143).$getArray$() != null;
        .java.lang.Object elem$141 = null;
        final .java.lang.Object array$146;
        int i$147 = 0;
        final int length$148;
        if (isTuple$145) {
            array$146 = ((.ceylon.language.Tuple)iterable$143).$getArray$();
            i$147 = ((.ceylon.language.Tuple)iterable$143).$getFirst$();
            length$148 = i$147 + ((.ceylon.language.Tuple)iterable$143).$getLength$();
        } else if (isArray$144) {
            array$146 = ((.ceylon.language.Array)iterable$143).toArray();
            length$148 = .com.redhat.ceylon.compiler.java.Util.arrayLength(array$146);
        } else {
            array$146 = null;
            length$148 = 0;
        }
        .ceylon.language.Iterator<? extends .ceylon.language.Integer> index$iterator$$142 = isTuple$145 || isArray$144 ? null : iterable$143.iterator();
        loop_13: while (isTuple$145 || isArray$144 ? i$147 < length$148 : !((elem$141 = index$iterator$$142.next()) instanceof .ceylon.language.Finished)) {
            if (isTuple$145 || isArray$144) elem$141 = .com.redhat.ceylon.compiler.java.Util.getObjectArray(array$146, i$147++);
            final long index = ((.ceylon.language.Integer)elem$141).longValue();
            throw new .ceylon.language.Exception(null, null);
        }
        from = 0L;
        return from;
    }
}
final class bug1227_function_ {
    
    private bug1227_function_() {
    }
    
    static long bug1227_function(final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> l) {
        final boolean someBoolean = ((.ceylon.language.Boolean).ceylon.language.nothing_.get_()).booleanValue();
        
        final class from_ {
            
            private from_() {
                this.from = null;
            }
            private .ceylon.language.Callable<? extends .ceylon.language.Integer> from;
            
            long from() {
                if (from == null) throw new .com.redhat.ceylon.compiler.java.language.UninitializedMethodError(); else return from.$call$().longValue();
            }
        }
        final from_ from = new from_();
        boolean doforelse$149 = true;
        final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> iterable$153 = l;
        final boolean isArray$154 = iterable$153 instanceof .ceylon.language.Array;
        final boolean isTuple$155 = iterable$153 instanceof .ceylon.language.Tuple && ((.ceylon.language.Tuple)iterable$153).$getArray$() != null;
        .java.lang.Object elem$150 = null;
        final .java.lang.Object array$156;
        int i$157 = 0;
        final int length$158;
        if (isTuple$155) {
            array$156 = ((.ceylon.language.Tuple)iterable$153).$getArray$();
            i$157 = ((.ceylon.language.Tuple)iterable$153).$getFirst$();
            length$158 = i$157 + ((.ceylon.language.Tuple)iterable$153).$getLength$();
        } else if (isArray$154) {
            array$156 = ((.ceylon.language.Array)iterable$153).toArray();
            length$158 = .com.redhat.ceylon.compiler.java.Util.arrayLength(array$156);
        } else {
            array$156 = null;
            length$158 = 0;
        }
        .ceylon.language.Iterator<? extends .ceylon.language.Integer> index$iterator$$151 = isTuple$155 || isArray$154 ? null : iterable$153.iterator();
        loop_14: while (isTuple$155 || isArray$154 ? i$157 < length$158 : !((elem$150 = index$iterator$$151.next()) instanceof .ceylon.language.Finished)) {
            if (isTuple$155 || isArray$154) elem$150 = .com.redhat.ceylon.compiler.java.Util.getObjectArray(array$156, i$157++);
            final long index = ((.ceylon.language.Integer)elem$150).longValue();
            if (someBoolean) {
                from.from = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.Empty.$TypeDescriptor$, "Integer()", (short)-1){
                    
                    @.java.lang.Override
                    public .ceylon.language.Integer $call$() {
                        return .ceylon.language.Integer.instance(index);
                    }
                };
                doforelse$149 = false;
                break loop_14;
            }
        }
        if (doforelse$149) {
            return 0L;
        }
        return from.from();
    }
}