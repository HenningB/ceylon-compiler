package com.redhat.ceylon.compiler.java.test.structure.constructor;

class CtorAbstractCtorSuper implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
    public static final .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorSuper.Foo Foo = null;
    
    public static final class Foo {
        
        private Foo() {
        }
    }
    
    public CtorAbstractCtorSuper(.com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorSuper.Foo $name$, final boolean b$param$) {
        .com.redhat.ceylon.compiler.java.test.structure.constructor.checker_.get_().note("super");
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorSuper.$TypeDescriptor$;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorSuper.class);
}
class CtorAbstractCtorPartial extends .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorSuper {
    @.com.redhat.ceylon.compiler.java.metadata.NoInitCheck
    private final long x;
    
    private final long getX$priv$() {
        return x;
    }
    @.com.redhat.ceylon.compiler.java.metadata.NoInitCheck
    private final long y;
    
    private final long getY$priv$() {
        return y;
    }
    private static final .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartial.Partial Partial = null;
    
    private static final class Partial {
        
        private Partial() {
        }
    }
    
    private CtorAbstractCtorPartial(.com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartial.Partial $name$, final long x$param$) {
        super(.com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorSuper.Foo, true);
        .com.redhat.ceylon.compiler.java.test.structure.constructor.checker_.get_().note("a");
        .com.redhat.ceylon.compiler.java.test.structure.constructor.checker_.get_().note("Partial");
        this.x = x$param$;
    }
    public static final .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartial.Rest Rest = null;
    
    public static final class Rest {
        
        private Rest() {
        }
    }
    
    public CtorAbstractCtorPartial(.com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartial.Rest $name$, final long y$param$) {
        this(.com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartial.Partial, 1L);
        .com.redhat.ceylon.compiler.java.test.structure.constructor.checker_.get_().note("b");
        .com.redhat.ceylon.compiler.java.test.structure.constructor.checker_.get_().note("Rest");
        this.y = y$param$;
        .ceylon.language.print_.print(.ceylon.language.Integer.instance(this.getX$priv$()));
        .ceylon.language.print_.print(.ceylon.language.Integer.instance(this.getX$priv$()));
        .com.redhat.ceylon.compiler.java.test.structure.constructor.checker_.get_().note("c");
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartial.$TypeDescriptor$;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartial.class);
}
class CtorAbstractCtorPartialShared extends .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorSuper {
    @.com.redhat.ceylon.compiler.java.metadata.NoInitCheck
    private final long x;
    
    public final long getX() {
        return x;
    }
    @.com.redhat.ceylon.compiler.java.metadata.NoInitCheck
    private final long y;
    
    public final long getY() {
        return y;
    }
    private static final .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialShared.Partial Partial = null;
    
    private static final class Partial {
        
        private Partial() {
        }
    }
    
    private CtorAbstractCtorPartialShared(.com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialShared.Partial $name$, final long x$param$) {
        super(.com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorSuper.Foo, true);
        .com.redhat.ceylon.compiler.java.test.structure.constructor.checker_.get_().note("a");
        .com.redhat.ceylon.compiler.java.test.structure.constructor.checker_.get_().note("Partial");
        this.x = x$param$;
    }
    public static final .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialShared.Rest Rest = null;
    
    public static final class Rest {
        
        private Rest() {
        }
    }
    
    public CtorAbstractCtorPartialShared(.com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialShared.Rest $name$, final long y$param$) {
        this(.com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialShared.Partial, 1L);
        .com.redhat.ceylon.compiler.java.test.structure.constructor.checker_.get_().note("b");
        .com.redhat.ceylon.compiler.java.test.structure.constructor.checker_.get_().note("Rest");
        this.y = y$param$;
        .com.redhat.ceylon.compiler.java.test.structure.constructor.checker_.get_().note("c");
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialShared.$TypeDescriptor$;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialShared.class);
}
class CtorAbstractCtorPartialCaptured extends .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorSuper {
    @.com.redhat.ceylon.compiler.java.metadata.NoInitCheck
    private final long x;
    
    private final long getX$priv$() {
        return x;
    }
    @.com.redhat.ceylon.compiler.java.metadata.NoInitCheck
    private final long y;
    
    private final long getY$priv$() {
        return y;
    }
    
    public final long capture() {
        return getX$priv$() + getY$priv$();
    }
    private static final .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialCaptured.Partial Partial = null;
    
    private static final class Partial {
        
        private Partial() {
        }
    }
    
    private CtorAbstractCtorPartialCaptured(.com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialCaptured.Partial $name$, final long x$param$) {
        super(.com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorSuper.Foo, true);
        .com.redhat.ceylon.compiler.java.test.structure.constructor.checker_.get_().note("a");
        .com.redhat.ceylon.compiler.java.test.structure.constructor.checker_.get_().note("Partial");
        this.x = x$param$;
    }
    public static final .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialCaptured.Rest Rest = null;
    
    public static final class Rest {
        
        private Rest() {
        }
    }
    
    public CtorAbstractCtorPartialCaptured(.com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialCaptured.Rest $name$, final long y$param$) {
        this(.com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialCaptured.Partial, 1L);
        .com.redhat.ceylon.compiler.java.test.structure.constructor.checker_.get_().note("b");
        .com.redhat.ceylon.compiler.java.test.structure.constructor.checker_.get_().note("Rest");
        this.y = y$param$;
        .com.redhat.ceylon.compiler.java.test.structure.constructor.checker_.get_().note("c");
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialCaptured.$TypeDescriptor$;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialCaptured.class);
}
class CtorAbstractCtorPartialVariable extends .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorSuper {
    @.com.redhat.ceylon.compiler.java.metadata.NoInitCheck
    private long x;
    
    private final long getX$priv$() {
        return x;
    }
    
    private final void setX$priv$(final long x) {
        this.x = x;
    }
    @.com.redhat.ceylon.compiler.java.metadata.NoInitCheck
    private long y;
    
    private final long getY$priv$() {
        return y;
    }
    
    private final void setY$priv$(final long y) {
        this.y = y;
    }
    
    final class xCapturer3_ implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
        
        private xCapturer3_() {
        }
        
        public final long capture(final long incr) {
            return (
                let
                {
                    .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialVariable $ceylontmp$opE$0 = .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialVariable.this;
                    long $ceylontmp$opV$1 = $ceylontmp$opE$0.getX$priv$() + incr;
                    $ceylontmp$opE$0.setX$priv$($ceylontmp$opV$1);
                }
                returning $ceylontmp$opV$1;
            );
        }
        
        @.java.lang.Override
        public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
            return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialVariable.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialVariable.xCapturer3_.class));
        }
    }
    
    final class yCapturer2_ implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
        
        private yCapturer2_() {
        }
        
        public final long capture(final long incr) {
            return (
                let
                {
                    .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialVariable $ceylontmp$opE$2 = .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialVariable.this;
                    long $ceylontmp$opV$3 = $ceylontmp$opE$2.getX$priv$() + incr;
                    $ceylontmp$opE$2.setX$priv$($ceylontmp$opV$3);
                }
                returning $ceylontmp$opV$3;
            );
        }
        
        @.java.lang.Override
        public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
            return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialVariable.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialVariable.yCapturer2_.class));
        }
    }
    private static final .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialVariable.Partial Partial = null;
    
    private static final class Partial {
        
        private Partial() {
        }
    }
    
    private CtorAbstractCtorPartialVariable(.com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialVariable.Partial $name$, final long x$param$) {
        super(.com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorSuper.Foo, true);
        .com.redhat.ceylon.compiler.java.test.structure.constructor.checker_.get_().note("a");
        .com.redhat.ceylon.compiler.java.test.structure.constructor.checker_.get_().note("Partial");
        this.setX$priv$(x$param$);
        
        final class xCapturer_ implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
            
            private xCapturer_() {
            }
            
            public final long capture(final long incr) {
                return (
                    let
                    {
                        .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialVariable $ceylontmp$opE$4 = .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialVariable.this;
                        long $ceylontmp$opV$5 = $ceylontmp$opE$4.getX$priv$() + incr;
                        $ceylontmp$opE$4.setX$priv$($ceylontmp$opV$5);
                    }
                    returning $ceylontmp$opV$5;
                );
            }
            
            @.java.lang.Override
            public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
                return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialVariable.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(xCapturer_.class));
            }
        }
        final xCapturer_ xCapturer = new xCapturer_();
        xCapturer.capture(1L);
    }
    public static final .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialVariable.Rest Rest = null;
    
    public static final class Rest {
        
        private Rest() {
        }
    }
    
    public CtorAbstractCtorPartialVariable(.com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialVariable.Rest $name$, final long y$param$) {
        this(.com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialVariable.Partial, 1L);
        .com.redhat.ceylon.compiler.java.test.structure.constructor.checker_.get_().note("b");
        
        final class xCapturer_ implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
            
            private xCapturer_() {
            }
            
            public final long capture(final long incr) {
                return (
                    let
                    {
                        .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialVariable $ceylontmp$opE$6 = .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialVariable.this;
                        long $ceylontmp$opV$7 = $ceylontmp$opE$6.getX$priv$() + incr;
                        $ceylontmp$opE$6.setX$priv$($ceylontmp$opV$7);
                    }
                    returning $ceylontmp$opV$7;
                );
            }
            
            @.java.lang.Override
            public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
                return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialVariable.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(xCapturer_.class));
            }
        }
        final xCapturer_ xCapturer = new xCapturer_();
        xCapturer.capture(4L);
        .com.redhat.ceylon.compiler.java.test.structure.constructor.checker_.get_().note("Rest");
        this.setY$priv$(y$param$);
        
        final class yCapturer_ implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
            
            private yCapturer_() {
            }
            
            public final long capture(final long incr) {
                return (
                    let
                    {
                        .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialVariable $ceylontmp$opE$8 = .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialVariable.this;
                        long $ceylontmp$opV$9 = $ceylontmp$opE$8.getY$priv$() + incr;
                        $ceylontmp$opE$8.setY$priv$($ceylontmp$opV$9);
                    }
                    returning $ceylontmp$opV$9;
                );
            }
            
            @.java.lang.Override
            public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
                return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialVariable.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(yCapturer_.class));
            }
        }
        final yCapturer_ yCapturer = new yCapturer_();
        yCapturer.capture(1L);
        final .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialVariable.xCapturer3_ xCapturer3 = new .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialVariable.xCapturer3_();
        xCapturer3.capture(8L);
        final .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialVariable.yCapturer2_ yCapturer2 = new .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialVariable.yCapturer2_();
        yCapturer2.capture(2L);
        .com.redhat.ceylon.compiler.java.test.structure.constructor.checker_.get_().note("c");
        .ceylon.language.print_.print(.ceylon.language.Integer.instance(getX$priv$()));
        .ceylon.language.print_.print(.ceylon.language.Integer.instance(getY$priv$()));
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialVariable.$TypeDescriptor$;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialVariable.class);
}
class CtorAbstractCtorPartialSharedVariable extends .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorSuper {
    @.com.redhat.ceylon.compiler.java.metadata.NoInitCheck
    private long x;
    
    public final long getX() {
        return x;
    }
    
    public final void setX(final long x) {
        this.x = x;
    }
    @.com.redhat.ceylon.compiler.java.metadata.NoInitCheck
    private long y;
    
    public final long getY() {
        return y;
    }
    
    public final void setY(final long y) {
        this.y = y;
    }
    
    final class xCapturer3_ implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
        
        private xCapturer3_() {
        }
        
        public final long capture(final long incr) {
            return (
                let
                {
                    .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialSharedVariable $ceylontmp$opE$10 = .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialSharedVariable.this;
                    long $ceylontmp$opV$11 = $ceylontmp$opE$10.getX() + incr;
                    $ceylontmp$opE$10.setX($ceylontmp$opV$11);
                }
                returning $ceylontmp$opV$11;
            );
        }
        
        @.java.lang.Override
        public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
            return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialSharedVariable.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialSharedVariable.xCapturer3_.class));
        }
    }
    
    final class yCapturer2_ implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
        
        private yCapturer2_() {
        }
        
        public final long capture(final long incr) {
            return (
                let
                {
                    .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialSharedVariable $ceylontmp$opE$12 = .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialSharedVariable.this;
                    long $ceylontmp$opV$13 = $ceylontmp$opE$12.getX() + incr;
                    $ceylontmp$opE$12.setX($ceylontmp$opV$13);
                }
                returning $ceylontmp$opV$13;
            );
        }
        
        @.java.lang.Override
        public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
            return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialSharedVariable.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialSharedVariable.yCapturer2_.class));
        }
    }
    private static final .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialSharedVariable.Partial Partial = null;
    
    private static final class Partial {
        
        private Partial() {
        }
    }
    
    private CtorAbstractCtorPartialSharedVariable(.com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialSharedVariable.Partial $name$, final long x$param$) {
        super(.com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorSuper.Foo, true);
        .com.redhat.ceylon.compiler.java.test.structure.constructor.checker_.get_().note("a");
        .com.redhat.ceylon.compiler.java.test.structure.constructor.checker_.get_().note("Partial");
        this.setX(x$param$);
        
        final class xCapturer_ implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
            
            private xCapturer_() {
            }
            
            public final long capture(final long incr) {
                return (
                    let
                    {
                        .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialSharedVariable $ceylontmp$opE$14 = .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialSharedVariable.this;
                        long $ceylontmp$opV$15 = $ceylontmp$opE$14.getX() + incr;
                        $ceylontmp$opE$14.setX($ceylontmp$opV$15);
                    }
                    returning $ceylontmp$opV$15;
                );
            }
            
            @.java.lang.Override
            public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
                return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialSharedVariable.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(xCapturer_.class));
            }
        }
        final xCapturer_ xCapturer = new xCapturer_();
        xCapturer.capture(1L);
    }
    public static final .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialSharedVariable.Rest Rest = null;
    
    public static final class Rest {
        
        private Rest() {
        }
    }
    
    public CtorAbstractCtorPartialSharedVariable(.com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialSharedVariable.Rest $name$, final long y$param$) {
        this(.com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialSharedVariable.Partial, 1L);
        .com.redhat.ceylon.compiler.java.test.structure.constructor.checker_.get_().note("b");
        
        final class xCapturer_ implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
            
            private xCapturer_() {
            }
            
            public final long capture(final long incr) {
                return (
                    let
                    {
                        .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialSharedVariable $ceylontmp$opE$16 = .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialSharedVariable.this;
                        long $ceylontmp$opV$17 = $ceylontmp$opE$16.getX() + incr;
                        $ceylontmp$opE$16.setX($ceylontmp$opV$17);
                    }
                    returning $ceylontmp$opV$17;
                );
            }
            
            @.java.lang.Override
            public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
                return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialSharedVariable.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(xCapturer_.class));
            }
        }
        final xCapturer_ xCapturer = new xCapturer_();
        xCapturer.capture(4L);
        .com.redhat.ceylon.compiler.java.test.structure.constructor.checker_.get_().note("Rest");
        this.setY(y$param$);
        
        final class yCapturer_ implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
            
            private yCapturer_() {
            }
            
            public final long capture(final long incr) {
                return (
                    let
                    {
                        .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialSharedVariable $ceylontmp$opE$18 = .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialSharedVariable.this;
                        long $ceylontmp$opV$19 = $ceylontmp$opE$18.getY() + incr;
                        $ceylontmp$opE$18.setY($ceylontmp$opV$19);
                    }
                    returning $ceylontmp$opV$19;
                );
            }
            
            @.java.lang.Override
            public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
                return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialSharedVariable.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(yCapturer_.class));
            }
        }
        final yCapturer_ yCapturer = new yCapturer_();
        yCapturer.capture(1L);
        final .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialSharedVariable.xCapturer3_ xCapturer3 = new .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialSharedVariable.xCapturer3_();
        xCapturer3.capture(8L);
        final .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialSharedVariable.yCapturer2_ yCapturer2 = new .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialSharedVariable.yCapturer2_();
        yCapturer2.capture(2L);
        .com.redhat.ceylon.compiler.java.test.structure.constructor.checker_.get_().note("c");
        .ceylon.language.print_.print(.ceylon.language.Integer.instance(getX()));
        .ceylon.language.print_.print(.ceylon.language.Integer.instance(getY()));
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialSharedVariable.$TypeDescriptor$;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialSharedVariable.class);
}
class CtorAbstractCtorPartialCapturedVariable extends .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorSuper {
    @.com.redhat.ceylon.compiler.java.metadata.NoInitCheck
    private long x;
    
    private final long getX$priv$() {
        return x;
    }
    
    private final void setX$priv$(final long x) {
        this.x = x;
    }
    @.com.redhat.ceylon.compiler.java.metadata.NoInitCheck
    private long y;
    
    private final long getY$priv$() {
        return y;
    }
    
    private final void setY$priv$(final long y) {
        this.y = y;
    }
    
    final class xCapturer3_ implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
        
        private xCapturer3_() {
        }
        
        public final long capture(final long incr) {
            return (
                let
                {
                    .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialCapturedVariable $ceylontmp$opE$20 = .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialCapturedVariable.this;
                    long $ceylontmp$opV$21 = $ceylontmp$opE$20.getX$priv$() + incr;
                    $ceylontmp$opE$20.setX$priv$($ceylontmp$opV$21);
                }
                returning $ceylontmp$opV$21;
            );
        }
        
        @.java.lang.Override
        public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
            return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialCapturedVariable.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialCapturedVariable.xCapturer3_.class));
        }
    }
    
    final class yCapturer2_ implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
        
        private yCapturer2_() {
        }
        
        public final long capture(final long incr) {
            return (
                let
                {
                    .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialCapturedVariable $ceylontmp$opE$22 = .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialCapturedVariable.this;
                    long $ceylontmp$opV$23 = $ceylontmp$opE$22.getX$priv$() + incr;
                    $ceylontmp$opE$22.setX$priv$($ceylontmp$opV$23);
                }
                returning $ceylontmp$opV$23;
            );
        }
        
        @.java.lang.Override
        public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
            return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialCapturedVariable.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialCapturedVariable.yCapturer2_.class));
        }
    }
    
    public final long capture() {
        return getX$priv$() + getY$priv$();
    }
    private static final .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialCapturedVariable.Partial Partial = null;
    
    private static final class Partial {
        
        private Partial() {
        }
    }
    
    private CtorAbstractCtorPartialCapturedVariable(.com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialCapturedVariable.Partial $name$, final long x$param$) {
        super(.com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorSuper.Foo, true);
        .com.redhat.ceylon.compiler.java.test.structure.constructor.checker_.get_().note("a");
        .com.redhat.ceylon.compiler.java.test.structure.constructor.checker_.get_().note("Partial");
        this.setX$priv$(x$param$);
        
        final class xCapturer_ implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
            
            private xCapturer_() {
            }
            
            public final long capture(final long incr) {
                return (
                    let
                    {
                        .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialCapturedVariable $ceylontmp$opE$24 = .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialCapturedVariable.this;
                        long $ceylontmp$opV$25 = $ceylontmp$opE$24.getX$priv$() + incr;
                        $ceylontmp$opE$24.setX$priv$($ceylontmp$opV$25);
                    }
                    returning $ceylontmp$opV$25;
                );
            }
            
            @.java.lang.Override
            public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
                return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialCapturedVariable.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(xCapturer_.class));
            }
        }
        final xCapturer_ xCapturer = new xCapturer_();
        xCapturer.capture(1L);
    }
    public static final .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialCapturedVariable.Rest Rest = null;
    
    public static final class Rest {
        
        private Rest() {
        }
    }
    
    public CtorAbstractCtorPartialCapturedVariable(.com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialCapturedVariable.Rest $name$, final long y$param$) {
        this(.com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialCapturedVariable.Partial, 1L);
        .com.redhat.ceylon.compiler.java.test.structure.constructor.checker_.get_().note("b");
        
        final class xCapturer_ implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
            
            private xCapturer_() {
            }
            
            public final long capture(final long incr) {
                return (
                    let
                    {
                        .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialCapturedVariable $ceylontmp$opE$26 = .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialCapturedVariable.this;
                        long $ceylontmp$opV$27 = $ceylontmp$opE$26.getX$priv$() + incr;
                        $ceylontmp$opE$26.setX$priv$($ceylontmp$opV$27);
                    }
                    returning $ceylontmp$opV$27;
                );
            }
            
            @.java.lang.Override
            public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
                return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialCapturedVariable.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(xCapturer_.class));
            }
        }
        final xCapturer_ xCapturer = new xCapturer_();
        xCapturer.capture(4L);
        .com.redhat.ceylon.compiler.java.test.structure.constructor.checker_.get_().note("Rest");
        this.setY$priv$(y$param$);
        
        final class yCapturer_ implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
            
            private yCapturer_() {
            }
            
            public final long capture(final long incr) {
                return (
                    let
                    {
                        .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialCapturedVariable $ceylontmp$opE$28 = .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialCapturedVariable.this;
                        long $ceylontmp$opV$29 = $ceylontmp$opE$28.getY$priv$() + incr;
                        $ceylontmp$opE$28.setY$priv$($ceylontmp$opV$29);
                    }
                    returning $ceylontmp$opV$29;
                );
            }
            
            @.java.lang.Override
            public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
                return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialCapturedVariable.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(yCapturer_.class));
            }
        }
        final yCapturer_ yCapturer = new yCapturer_();
        yCapturer.capture(1L);
        final .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialCapturedVariable.xCapturer3_ xCapturer3 = new .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialCapturedVariable.xCapturer3_();
        xCapturer3.capture(8L);
        final .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialCapturedVariable.yCapturer2_ yCapturer2 = new .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialCapturedVariable.yCapturer2_();
        yCapturer2.capture(2L);
        .com.redhat.ceylon.compiler.java.test.structure.constructor.checker_.get_().note("c");
        .ceylon.language.print_.print(.ceylon.language.Integer.instance(getX$priv$()));
        .ceylon.language.print_.print(.ceylon.language.Integer.instance(getY$priv$()));
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialCapturedVariable.$TypeDescriptor$;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialCapturedVariable.class);
}
class CtorAbstractCtorGeneric<T> extends .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorSuper {
    
    CtorAbstractCtorGeneric(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T, .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorGeneric.Partial $name$) {
        (
            let
            {
                T $ceylontmp$x$30 = .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorGeneric.<T>CtorAbstractCtorGeneric$Partial$x($reified$T);
                this($reified$T, $name$, $ceylontmp$x$30);
            }
            returning null;
        );
    }
    
    CtorAbstractCtorGeneric(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T, .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorGeneric.Rest $name$) {
        (
            let
            {
                T $ceylontmp$y$31 = .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorGeneric.<T>CtorAbstractCtorGeneric$Rest$y($reified$T);
                this($reified$T, $name$, $ceylontmp$y$31);
            }
            returning null;
        );
    }
    private final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T;
    @.com.redhat.ceylon.compiler.java.metadata.NoInitCheck
    private final T x;
    
    private final T getX$priv$() {
        return x;
    }
    @.com.redhat.ceylon.compiler.java.metadata.NoInitCheck
    private final T y;
    
    private final T getY$priv$() {
        return y;
    }
    private static final .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorGeneric.Partial Partial = null;
    
    public static final <T>T CtorAbstractCtorGeneric$Partial$x(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T) {
        return null;
    }
    
    private static final class Partial {
        
        private Partial() {
        }
    }
    
    private CtorAbstractCtorGeneric(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T, .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorGeneric.Partial $name$, final T x$param$) {
        super(.com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorSuper.Foo, true);
        this.$reified$T = $reified$T;
        .com.redhat.ceylon.compiler.java.test.structure.constructor.checker_.get_().note("a");
        .com.redhat.ceylon.compiler.java.test.structure.constructor.checker_.get_().note("Partial");
        this.x = x$param$;
    }
    public static final .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorGeneric.Rest Rest = null;
    
    public static final <T>T CtorAbstractCtorGeneric$Rest$y(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T) {
        return null;
    }
    
    public static final class Rest {
        
        private Rest() {
        }
    }
    
    public CtorAbstractCtorGeneric(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T, .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorGeneric.Rest $name$, final T y$param$) {
        this($reified$T, .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorGeneric.Partial);
        .com.redhat.ceylon.compiler.java.test.structure.constructor.checker_.get_().note("b");
        .com.redhat.ceylon.compiler.java.test.structure.constructor.checker_.get_().note("Rest");
        this.y = y$param$;
        .ceylon.language.print_.print(this.getX$priv$());
        .ceylon.language.print_.print(this.getX$priv$());
        .com.redhat.ceylon.compiler.java.test.structure.constructor.checker_.get_().note("c");
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorGeneric.class, $reified$T);
    }
}
@.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 8)
@.com.redhat.ceylon.compiler.java.metadata.Method
public final class runCtorAbstractCtor_ {
    
    private runCtorAbstractCtor_() {
    }
    
    @.ceylon.language.SharedAnnotation$annotation$
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("ceylon.language::Anything")
    public static void runCtorAbstractCtor() {
        .com.redhat.ceylon.compiler.java.test.structure.constructor.checker_.get_().reset();
        new .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartial(.com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartial.Rest, 1L);
        .com.redhat.ceylon.compiler.java.test.structure.constructor.checker_.get_().check("[super, a, Partial, b, Rest, c]");
        .com.redhat.ceylon.compiler.java.test.structure.constructor.checker_.get_().reset();
        new .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialShared(.com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialShared.Rest, 1L);
        .com.redhat.ceylon.compiler.java.test.structure.constructor.checker_.get_().check("[super, a, Partial, b, Rest, c]");
        .com.redhat.ceylon.compiler.java.test.structure.constructor.checker_.get_().reset();
        new .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialCaptured(.com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialCaptured.Rest, 1L);
        .com.redhat.ceylon.compiler.java.test.structure.constructor.checker_.get_().check("[super, a, Partial, b, Rest, c]");
        .com.redhat.ceylon.compiler.java.test.structure.constructor.checker_.get_().reset();
        new .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialVariable(.com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialVariable.Rest, 1L);
        .com.redhat.ceylon.compiler.java.test.structure.constructor.checker_.get_().check("[super, a, Partial, b, Rest, c]");
        .com.redhat.ceylon.compiler.java.test.structure.constructor.checker_.get_().reset();
        new .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialSharedVariable(.com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialSharedVariable.Rest, 1L);
        .com.redhat.ceylon.compiler.java.test.structure.constructor.checker_.get_().check("[super, a, Partial, b, Rest, c]");
        .com.redhat.ceylon.compiler.java.test.structure.constructor.checker_.get_().reset();
        new .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialCapturedVariable(.com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorPartialCapturedVariable.Rest, 1L);
        .com.redhat.ceylon.compiler.java.test.structure.constructor.checker_.get_().check("[super, a, Partial, b, Rest, c]");
        .com.redhat.ceylon.compiler.java.test.structure.constructor.checker_.get_().reset();
        new .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorGeneric<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.test.structure.constructor.CtorAbstractCtorGeneric.Rest, .ceylon.language.Integer.instance(1L));
        .com.redhat.ceylon.compiler.java.test.structure.constructor.checker_.get_().check("[super, a, Partial, b, Rest, c]");
    }
    
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.get_().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.structure.constructor.runCtorAbstractCtor_.runCtorAbstractCtor();
    }
}