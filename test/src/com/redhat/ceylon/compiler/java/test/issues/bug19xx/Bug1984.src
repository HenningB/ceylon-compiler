package com.redhat.ceylon.compiler.java.test.issues.bug19xx;

class Bug1984 implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
    
    Bug1984() {
    }
    
    public final void m() {
        final .ceylon.language.Sequence<? extends .ceylon.language.String> elements = (.ceylon.language.Sequence<? extends .ceylon.language.String>)(.ceylon.language.Sequence)new .com.redhat.ceylon.compiler.java.language.AbstractIterable<.ceylon.language.String, .java.lang.Object>(.ceylon.language.String.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType){
            
            public final .ceylon.language.Iterator<.ceylon.language.String> iterator() {
                return new .com.redhat.ceylon.compiler.java.language.AbstractIterator<.ceylon.language.String>(.ceylon.language.String.$TypeDescriptor$){
                    {
                        $iterator$0 = ((.ceylon.language.Sequence<? extends .ceylon.language.String>).ceylon.language.Tuple.instance(.ceylon.language.String.$TypeDescriptor$, new .java.lang.Object[]{.ceylon.language.String.instance("")})).iterator();
                    }
                    private final .ceylon.language.Iterator<? extends .ceylon.language.String> $iterator$0;
                    private .ceylon.language.String e;
                    private boolean e$exhausted$;
                    
                    private final boolean e() {
                        final .java.lang.Object $ceylontmp$item$0 = $iterator$0.next();
                        e$exhausted$ = $ceylontmp$item$0 == .ceylon.language.finished_.get_();
                        if (e$exhausted$) {
                            return false;
                        } else {
                            e = (.ceylon.language.String)$ceylontmp$item$0;
                            return true;
                        }
                    }
                    
                    public final .java.lang.Object next() {
                        if (this.e()) {
                            final .ceylon.language.String e = this.e;
                            return (
                                let
                                {
                                    .ceylon.language.String $ceylontmp$ifResult$1;
                                    switch_0: switch (e.toString()) {
                                    case "": 
                                        {
                                            $ceylontmp$ifResult$1 = .ceylon.language.String.instance("");
                                        }
                                        break switch_0;
                                    
                                    case "foo": 
                                        {
                                            $ceylontmp$ifResult$1 = e;
                                        }
                                        break switch_0;
                                    
                                    default: 
                                        {
                                            final .java.lang.String e$2 = ((.ceylon.language.String)e).toString();
                                            $ceylontmp$ifResult$1 = .ceylon.language.String.instance(.ceylon.language.String.pad(e$2, 2L));
                                        }
                                    
                                    }
                                }
                                returning $ceylontmp$ifResult$1;
                            );
                        } else return .ceylon.language.finished_.get_();
                    }
                };
            }
        }.sequence();
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.get_().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.issues.bug19xx.Bug1984();
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.issues.bug19xx.Bug1984.$TypeDescriptor$;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.issues.bug19xx.Bug1984.class);
}